# Tmux Header {{
# vim: set sw=4 ts=4 sts=4 et tw=78 foldmarker={{,}} foldlevel=0 foldmethod=marker spell:
# }}

## Resources {{
## https://shapeshed.com/custom-vim-bindings-in-tmux-2-4/

## }}

# General options {{
#run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6- | sed -e 's/a//')"
setenv -g TMUX_VERSION 2.5
 

# tmux messages are displayed for 4 seconds
set -g display-time 4000

# refresh 'status-left' and 'status-right' more often
set -g status-interval 30

# focus events enabled for terminals that support them
set -g focus-events on

# super useful when using "grouped sessions" and multi-monitor setup
setw -g aggressive-resize on

# Map prefix to control-space
set-option -g prefix C-@

setw -g automatic-rename off


## Prevent tmux from locking up due to lots of text output

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
 "setw -g c0-change-trigger 10; \
 setw -g c0-change-interval 250; \
 setw -g utf8 on; \
 setw -g status-utf8 on"

## set -g automatic-rename-format

# Default termtype. If the rcfile sets $TERM, that overrides this value.
# 2016/07/12 10:54 Changed to screen-256color to fix fzf
# https://github.com/junegunn/fzf/issues/18
set -g default-terminal screen-256color
#set -g default-terminal xterm-256color

# Ring the bell if any background window rang a bell
set -g bell-action any

# When a window is closed, renumber the other windows in numerical order
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# scrollback size
set -g history-limit 10000

# set first window to index 1 (not 0) to map more to the keyboard layout
set -g base-index 1
setw -g pane-base-index 1

# pass through xterm keys
# TODO : Breaks Meta key for zsh. Needed for vim??
set -g xterm-keys on

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# Activity monitoring
#setw -g 
#set -g visual-activity off

# Silence monitoring
# ## Add monitor for icc_shell>
# 

bind i setw monitor-content "icc_shell>"
bind C-a setw monitor-activity on
bind C-s setw monitor-silence 30
unbind c-q
unbind space
bind C-q setw monitor-activity off \; setw monitor-silence 0 \; setw monitor-content ""


set -g default-command /usr/bin/zsh
set -g default-shell /usr/bin/zsh

# Append gvim_server to list of variables to update
set-option -ga update-environment ' PWD gvim_server'


#set -g visual-silence off
set -g visual-silence on
set -g visual-activity on
# TMUX 2.4 set -g visual-content on

#  tmux allows a command to be bound to most keys, with or without a prefix
#     key.  When specifying keys, most represent themselves (for example `A' to
#     `Z').  Ctrl keys may be prefixed with `C-' or `^', and Alt (meta) with
#     `M-'.  In addition, the following special key names are accepted: Up,
#     Down, Left, Right, BSpace, BTab, DC (Delete), End, Enter, Escape, F1 to
#     F20, Home, IC (Insert), NPage/PageDown/PgDn, PPage/PageUp/PgUp, Space,
#     and Tab.  Note that to bind the `"' or `'' keys, quotation marks are
#     necessary, for example:
##

#}}

# Key bindings {{

unbind C-b

#bind-key C-@ last-window
bind-key \; last-window

## Fails 2016/11/08 13:10
## xterm: error while loading shared libraries: libXaw.so.8: cannot open shared object file: No such file or directory
bind-key -n M-\; last-window

## Do not detach tmux with d
unbind d
## Confirm before detach tmux
# bind-key d & confirm-before -p "detach tmux? (y/n)" detach-client

# bind-key C-c new-window -c "#{pane_current_path}"
# Open new windows will use current working directory
bind-key c new-window -c "#{pane_current_path}"

# open a man page in new window
# 2016/07/06 13:24 does not work
#bind-key m command-prompt "split-window -v 'exec man %%'"
#bind-key m split-window -v 'exec man %%'



# reload tmux config
unbind r
bind r \
    source-file ~/.tmux.conf \;\
    display 'Reloaded tmux config.'

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys emacs
set-option -gw mode-keys vi

# Use vi keybindings in copy and choice modes
#setw -g mode-keys vi

#}}

# Scrollback / pastebuffer {{
#
unbind C-c
unbind C-v
#unbind C-d
#unbind C-f
#
## C-c: save into system clipboard (+). With preselection.
#bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
## C-v: copy from + clipboard.
#bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
#
## C-d: save into selection clipboard (*). With preselection.
#bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
## C-f: copy from * clipboard.
#bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""
## 
#
## Copy tmux paste buffer to CLIPBOARD
bind C-c run "tmux show-buffer | xclip -i -selection clipboard"
## Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

#set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
 "set-window-option -g mode-mouse off; \
 set-window-option -g mode-mouse off; \
 set-option -g mouse-select-pane off"

# Vim-style copy/paste
unbind [
# bind-key y copy-mode
bind-key C-@ copy-mode
bind-key C-b copy-mode
unbind p
bind p paste-buffer

if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  "bind-key Escape copy-mode; \
  bind-key -t vi-copy Escape cancel; \
  bind-key p paste-buffer; \
  bind-key -t vi-copy v begin-selection; \
  bind-key -t vi-copy V select-line; \
  bind-key -t vi-copy r rectangle-toggle; \
  bind-key -t vi-copy y copy-selection; \
  bind-key -t vi-copy    C-b page-up \
  bind -t vi-copy y copy-pipe 'xclip -in -selection clipboard'"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  "bind-key -T copy-mode-vi 'v' send -X begin-selection; \
  bind-key -T copy-mode-vi 'V' send -X select-line; \
  bind-key -T copy-mode-vi 'r' send -X rectangle-toggle; \
  bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'"

## Conflict with copycat plugin
# bind -t vi-copy Escape cancel

# Makes Shift-PageUp/Down work
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#}}

# Mouse mode {{

#set -g mode-mouse off
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'


# Toggle mouse on
# bind m \
#     set -g mode-mouse on \;\
#     set -g mouse-resize-pane on \;\
#     set -g mouse-select-pane on \;\
#     set -g mouse-select-window on \;\
#     display 'Mouse: ON'

# Toggle mouse off
bind M \
    set -g mode-mouse off \;\
    set -g mouse-resize-pane off \;\
    set -g mouse-select-pane off \;\
    set -g mouse-select-window off \;\
    display 'Mouse: OFF'
#}}

# Pane splitting {{

# Horizontal splits with s or C-S
unbind s
#unbind C-S
bind-key s split-window -c "#{pane_current_path}"
#bind-key C-S split-window

# Vertical split with v or C-V
unbind v
#unbind C-V
bind-key v split-window -h -c "#{pane_current_path}"
#bind-key C-V split-window -h
#}}

# Window navigation {{

bind-key -n M-1       select-window -t :1
bind-key -n M-2       select-window -t :2
bind-key -n M-3       select-window -t :3
bind-key -n M-4       select-window -t :4
bind-key -n M-5       select-window -t :5
bind-key -n M-6       select-window -t :6
bind-key -n M-7       select-window -t :7
bind-key -n M-8       select-window -t :8
bind-key -n M-9       select-window -t :9
# }}

# Session navigation {{

bind-key -n 'M-!'       switch-client -t 1
bind-key -n 'M-@'       switch-client -t 2
bind-key -n 'M-#'       switch-client -t 3
bind-key -n 'M-$'       switch-client -t 4
bind-key -n 'M-%'       switch-client -t 5
bind-key -n 'M-^'       switch-client -t 6
bind-key -n 'M-&'       switch-client -t 7
bind-key -n 'M-*'       switch-client -t 8
bind-key -n 'M-('       switch-client -t 9


# }}

# Pane navigation {{

# navigation with ctrl-{h,j,k,l} -- NO PREFIX
# https://gist.github.com/mislav/5189704

## Conflicts with fvwm mapping
#bind -n M-Left select-pane -L
#bind -n M-Right select-pane -R
#bind -n M-Up select-pane -U
#bind -n M-Down select-pane -D

unbind k
unbind j
bind k select-pane -U
bind j select-pane -D
bind h select-pane -L
bind l select-pane -R
bind C-k select-pane -U
bind C-j select-pane -D
bind C-h select-pane -L
bind C-l select-pane -R

#unbind -n c-k
unbind -n S-Left 
unbind -n S-Right
unbind -n S-Up
unbind -n S-Down
#bind-key -n C-K       select-pane   -U
# bind-key -n C-J       select-pane   -D
# bind-key -n C-H       select-pane   -L
# bind-key -n C-L       select-pane   -R
bind-key -n S-Up      select-pane   -U
bind-key -n S-Down    select-pane   -D
bind-key -n S-Left    previous-window
bind-key -n S-Right   next-window
bind-key p            previous-window
bind-key n            next-window
# bind-key C-J    previous-window
# bind-key C-K    next-window
bind-key -n C-Up      resize-pane   -U
bind-key -n C-Down    resize-pane   -D
bind-key -n C-Right   resize-pane   -R
bind-key -n C-Left    resize-pane   -L
bind-key -n M-z       resize-pane   -Z
bind-key -n M-Enter   resize-pane   -Z
bind-key C-z          resize-pane   -Z
bind-key = select-layout even-vertical
bind-key | select-layout even-horizontal

# Move into and out of panes
bind-key M-j command-prompt -p "join pane from (window.pane):"  "join-pane -s '%%'"
bind-key M-s command-prompt -p "send pane to   (window.pane):"  "join-pane -t '%%'"


# Smart pane switching with awareness of vim splits
bind -n M-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n M-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n M-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n M-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n M-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys 'C-\\') || tmux select-pane -l"

bind -n M-Left   run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n M-Up     run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n M-Down   run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n M-Right  run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)g?(view|n?vim?)(diff)?$' && tmux send-keys C-l) || tmux select-pane -R"
#}}

# Colors {{

# Solarized colors {{
# SOLARIZED HEX     16/8 TERMCOL  XTERM/HEX   
# --------- ------- ---- -------  ----------- 
# base03    #002b36  8/4 brblack  234 #1c1c1c 
# base02    #073642  0/4 black    235 #262626 
# base01    #586e75 10/7 brgreen  240 #4e4e4e 
# base00    #657b83 11/7 bryellow 241 #585858 
# base0     #839496 12/6 brblue   244 #808080 
# base1     #93a1a1 14/4 brcyan   245 #8a8a8a 
# base2     #eee8d5  7/7 white    254 #d7d7af 
# base3     #fdf6e3 15/7 brwhite  230 #ffffd7 
# yellow    #b58900  3/3 yellow   136 #af8700 
# orange    #cb4b16  9/3 brred    166 #d75f00 
# red       #dc322f  1/1 red      160 #d70000 
# magenta   #d33682  5/5 magenta  125 #af005f 
# violet    #6c71c4 13/5 brmagenta 61 #5f5faf 
# blue      #268bd2  4/4 blue      33 #0087ff 
# cyan      #2aa198  6/6 cyan      37 #00afaf 
# green     #859900  2/2 green     64 #5f8700 
#
# }}

# pane number display
set-option -g display-panes-active-colour blue
set-option -g display-panes-colour colour9

# clock
set-window-option -g clock-mode-colour colour2

# http://www.openbsd.org/cgi-bin/man.cgi?query=tmux&sektion=1#FORMATS

# }}

# https://stackoverflow.com/questions/25532773/change-background-color-of-active-or-inactive-pane-in-tmux/33553372#33553372
#set inactive/active window styles
#set -g window-style 'bg=colour54'
set -g window-active-style 'fg=colour12'
#set -g window-style 'fg=colour10'
set -g window-style 'fg=colour248'

# set the pane border colors 
#set -g pane-border-fg colour250
#set -g pane-border-bg colour236
set-option -g pane-border-fg colour12
set-option -g pane-active-border-fg colour12
#set-option -g pane-border-bg colour54
#set-option -g pane-active-border-bg colour54

# Status bar {{
# "I' == current window index
# 'H' == Hostname
# 'F' == current window flag
# 'P' == current pane index
# 'S' == Session name
# 'T' == current window title
# 'W' == current window name
# '#' == a literal "#"
# Where appropriate, special character sequences may be prefixed with a
# number to specify the maximum length, in this line "#10W'.

set-option -g status-justify right

# Default statusbar colors
set-option -g status-attr default
set-option -g status-bg colour0
set-option -g status-fg colour6

# Message text
set-option -g message-bg colour0
set-option -g message-fg colour9

# Window status {{
# set-window-option -g window-status-attr dim
set-window-option -g window-status-fg default
set-window-option -g window-status-bg default

# Current window
set-window-option -g window-status-current-attr bold
set-window-option -g window-status-current-fg default
set-window-option -g window-status-current-bg default

# Active window
set-window-option -g window-status-activity-attr bold
set-window-option -g window-status-activity-fg colour9
set-window-option -g window-status-activity-bg default

# Content window
# TMUX 2.4 set-window-option -g window-status-content-attr bold
# TMUX 2.4 set-window-option -g window-status-content-fg colour164 # Purple
# TMUX 2.4 set-window-option -g window-status-content-bg default 

# Window status formats
#   Window number (#I) in green arrow
#   Window name (#W) in dark box with bold blue text
#   Ooptional flags (#F) in dark box with bold blue text
#   For example #{?session_attached,attached,not attached} will include the string attached if the session is attached and the string not attached if it is unattached. A limit may be placed on the length of the resultant string by prefixing it by an =, a number and a colon, so #{=10:pane_title} will include at most the first 10 characters of the pane title.
set-window-option -g window-status-format         \
  '#[bg=colour64]#[fg=colour8,bold]#I#[fg=colour64]#[bg=colour8]#[fg=colour33,bold] #W#F  #[fg=colour0,nobold]#[bg=default]'
#set-window-option -g window-status-current-format \
#  '#[bg=colour166]#[fg=colour0,bold]#I #W#[fg=colour166]#[bg=colour136] #[bg=colour136]#[fg=colour234,bold]#P#F#[bg=default]#[fg=default,nobold]'
set-window-option -g window-status-current-format \
  '#[bg=colour64]#[fg=colour8,bold]#I#[fg=colour64]#[bg=colour166]#[bg=colour166]#[fg=colour0,bold] #W#[fg=colour166]#[bg=colour136] #[bg=colour136]#[fg=colour234,bold]#P#F#[bg=default]#[fg=default,nobold]'
# }}

set-option -g status-left-length 15
#set-option -g status-left "#[fg=green]#h#[fg=blue]#(uptime | cut -d ',' -f 3 | cut -d ':' -f 2)#[fg=brightred] #P:#T"
#set-option -g status-left "#[fg=green]#h:#{session_name}:#[fg=blue]#P#[fg=brightred] #P:#T"
#set-option -g status-left "#[bg=colour235]#[fg=colour64,bold]#{session_name}#[fg=colour235,nobold]#[bg=colour234]#[fg=colour33]#P#[fg=colour234]#[bg=black]#[fg=brightred]#T"

## Display session_name in solarized blue
# set-option -g status-left "#[bg=colour0]#[fg=blue]#{session_name} #[bg=default]#[fg=default]"
# set-option -g status-left "#[bg=colour0]#[fg=blue]#{session_name} #[bg=default]#[fg=default] #(uptime|awk -F',' '{print $3}'|awk '{print $3}')"
set-option -g status-left "#[bg=colour0]#[fg=green]#{session_name} #[bg=default]#[fg=default] #(uptime|awk -F',' '{print $3}'|awk '{print $3}')"

# status bar
#set-option -g status-right-length 60#[bg=colour235]
#set-option -g status-right "#[fg=green]'#{pane_current_command}'#[fg=yellow]h:#{history_size} width#{pane_width} #[fg=blue]#I:#P #[fg=yellow]"
#set -g status-right "h:#{history_size}"
#set-option -g status-right "#[fg=green]#{session_name}"
set-option -g status-right ""
# }}

# }}

# Powerline symbols {{
# echo "\ue0b0 \u00b1 \ue0a0 \u27a6 \u2718 \u26a1 \u2699"
#  let g:airline_left_sep = ''
#  let g:airline_left_alt_sep = ''
#  let g:airline_right_sep = ''
#  let g:airline_right_alt_sep = ''
#  let g:airline_symbols.branch = ''
#  let g:airline_symbols.readonly = ''
#  let g:airline_symbols.linenr = ''
# }}

# Plugins {{
set -g @plugin 'tmux-plugins/tpm'

# https://github.com/tmux-plugins
# ~/.tmux/plugins/tmux-continuum/README.md
set -g @plugin 'tmux-plugins/tmux-continuum'
# ~/.tmux/plugins/tmux-resurrect/README.md
set -g @plugin 'tmux-plugins/tmux-resurrect'
# ~/.tmux/plugins/tmux-copycat/README.md
# https://github.com/tmux-plugins/tmux-copycat/issues/109
# set -g @plugin 'tmux-plugins/tmux-copycat'

# ~/.tmux/plugins/tmux-yank/README.md
set -g @plugin 'tmux-plugins/tmux-yank'

# ~/.tmux/plugins/tmux-logging/README.md
# set -g @plugin 'tmux-plugins/tmux-logging'
# ~/.tmux/plugins/tmux-prefix-highlight/README.md
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'
# ~/.tmux/plugins/tmux-sessionist/README.md
set -g @plugin 'tmux-plugins/tmux-sessionist'

set -g @continuum-restore 'off'
set -g @continuum-save-interval '60'
set -g @yank_selection '-primary'

#bind-key -Tcopy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"\; send -X clear-selection
#bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"\; send -X clear-selection

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# }}
